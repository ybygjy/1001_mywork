--所有对象
SELECT OWNER, OBJECT_TYPE, COUNT(*) FROM ALL_OBJECTS WHERE OWNER IN ('N6_YW','N6_SP2_1') GROUP BY OWNER,OBJECT_TYPE
--序列对象信息
SELECT * FROM ALL_SEQUENCES A 
--触发器
SELECT * FROM ALL_TRIGGERS WHERE OWNER='NSTCSA601' AND WHEN_CLAUSE IS NOT NULL;

--NSTCSA581多余的触发器
SELECT '2' TYPE, A.TABLE_NAME, A.TRIGGER_NAME, A.TRIGGER_TYPE, A.TRIGGERING_EVENT, A.BASE_OBJECT_TYPE, A.WHEN_CLAUSE,DECODE(A.STATUS, 'ENABLED', 1, 0) STATUS
  FROM ALL_TRIGGERS A
 WHERE OWNER = 'N6_YW'
   AND NOT EXISTS (SELECT 1
          FROM ALL_TRIGGERS B
         WHERE B.OWNER = 'N6_SP2_1'
           AND B.TABLE_NAME = A.TABLE_NAME
           AND B.TRIGGER_NAME = A.TRIGGER_NAME)
--触发器与表以及表字段的信息
SELECT * FROM ALL_TRIGGER_COLS WHERE TRIGGER_OWNER='NSTCSA601' AND trigger_name = 'TR_CB_ACCOUNT'
SELECT * FROM ALL_TAB_COLS WHERE OWNER='NSTCSA601' AND TABLE_NAME = 'CB_ACCOUNT'
--过程/函数
SELECT * FROM ALL_PROCEDURES WHERE OWNER='NSTCSA601'
--过程内容
SELECT COUNT(*), NAME, TYPE FROM ALL_SOURCE WHERE OWNER='NSTCSA601' GROUP BY NAME, TYPE

--类型
SELECT * FROM ALL_TYPES WHERE OWNER='NSTCSA601'
--类型属性明细
SELECT * FROM ALL_TYPE_ATTRS WHERE OWNER='NSTCSA601'
--源码
SELECT COUNT(*), TYPE FROM ALL_SOURCE WHERE OWNER='NSTCSA601' GROUP BY TYPE

--包
SELECT NAME,TYPE,COUNT(*), MAX(LINE) FROM ALL_SOURCE WHERE OWNER='NSTCSA601' AND TYPE IN ('PACKAGE BODY','PACKAGE') GROUP BY NAME,TYPE
SELECT * FROM ALL_SOURCE WHERE OWNER='NSTCSA601' AND TYPE IN ('PACKAGE BODY','PACKAGE') AND NAME='FB_NDQX_SYNO'
--约束
SELECT * FROM ALL_CONSTRAINTS
--工作目录
SELECT * FROM ALL_WORKSPACES
--查询目录
SELECT * FROM ALL_DIRECTORIES
--版本信息
SELECT * FROM V$VERSION
--用户信息
SELECT * FROM ALL_USERS
--表对象信息
SELECT OWNER,COUNT(*) FROM ALL_TABLES GROUP BY OWNER HAVING OWNER IN ('NSTCSA601','NSTCSA721', 'NSTCSA581');
--列对象信息
SELECT * FROM ALL_TAB_COLS WHERE OWNER IN ('NSTCSA601','NSTCSA721', 'NSTCSA581');
--表比对_缺少的表_(在NSTCSA601中存在但不在NSTCSA581中存在的表)
SELECT AAT.OWNER,AAT.TABLE_NAME FROM ALL_TABLES AAT WHERE AAT.OWNER = 'N6_SP2_1' AND NOT EXISTS(
       SELECT 1 FROM ALL_TABLES AAT2 WHERE AAT2.OWNER = 'N6_YW' AND AAT2.TABLE_NAME = AAT.TABLE_NAME
)

--取NSTCSA581存在但NSTCSA601中不存在的表字段(记录与参照库不匹配)
SELECT '多出字段' AS "类别", A.*
  FROM (SELECT OWNER,
               TABLE_NAME,
               COLUMN_NAME
          FROM ALL_TAB_COLS ATC1
         WHERE OWNER = 'NSTCSA581'
           AND NOT EXISTS
         (SELECT OWNER,
                       TABLE_NAME,
                       COLUMN_NAME
                  FROM ALL_TAB_COLS ATC2
                 WHERE OWNER = 'NSTCSA601'
                   AND ATC2.COLUMN_NAME = ATC1.COLUMN_NAME) ORDER BY TABLE_NAME, COLUMN_NAME) A
UNION ALL
--取NSTCSA581不存在但NSTCSA601存在的数据
SELECT '缺少字段' AS "类别", A.*
  FROM (SELECT OWNER,
               TABLE_NAME,
               COLUMN_NAME
          FROM ALL_TAB_COLS ATC1
         WHERE OWNER = 'NSTCSA601'
           AND NOT EXISTS
         (SELECT OWNER,
                       TABLE_NAME,
                       COLUMN_NAME
                  FROM ALL_TAB_COLS ATC2
                 WHERE OWNER = 'NSTCSA581'
                   AND ATC2.COLUMN_NAME = ATC1.COLUMN_NAME) ORDER BY TABLE_NAME, COLUMN_NAME) A
--比较表字段的明细
SELECT *
  FROM (SELECT OWNER,
               TABLE_NAME,
               COLUMN_NAME,
               DATA_TYPE,
               DATA_LENGTH,
               DATA_PRECISION,
               DATA_SCALE,
               NULLABLE,
               DEFAULT_LENGTH,
               DATA_DEFAULT
          FROM ALL_TAB_COLS ACT1
         WHERE OWNER = 'NSTCSA581' AND TABLE_NAME = 'ACC_CHECK' AND COLUMN_NAME='ABSTRACT'
           AND EXISTS (SELECT 1
                  FROM ALL_TAB_COLS ATC2
                 WHERE ATC2.OWNER = 'NSTCSA601'
                   AND ATC2.TABLE_NAME = ACT1.TABLE_NAME)) A,
       (SELECT OWNER,
               TABLE_NAME,
               COLUMN_NAME,
               DATA_TYPE,
               DATA_LENGTH,
               DATA_PRECISION,
               DATA_SCALE,
               NULLABLE,
               DEFAULT_LENGTH,
               DATA_DEFAULT
          FROM ALL_TAB_COLS ACT1
         WHERE OWNER = 'NSTCSA601' AND TABLE_NAME = 'ACC_CHECK'
           AND EXISTS (SELECT 1
                  FROM ALL_TAB_COLS ATC2
                 WHERE ATC2.OWNER = 'NSTCSA581'
                   AND ATC2.TABLE_NAME = ACT1.TABLE_NAME)) B
 WHERE A.TABLE_NAME = B.TABLE_NAME
   AND A.COLUMN_NAME = B.COLUMN_NAME

--表名称|字段名称|字段类型|字段长度|字段精度|小数位数|默认值(长度)|非空|
--ABCDEF| QAZ    |YES|22!=30  |    | YES    | YES    |12!=33
--视图定义
SELECT * FROM ALL_VIEWS

--查表数量
SELECT (SELECT COUNT(*) FROM ALL_TABLES WHERE OWNER = 'NSTCSA601') A, (SELECT COUNT(*) FROM ALL_TABLES WHERE OWNER = 'NSTCSA581') B,
(SELECT COUNT(*) FROM ALL_TABLES ATT WHERE ATT.OWNER = 'NSTCSA601' AND NOT EXISTS(SELECT 1 FROM ALL_TABLES IATT WHERE IATT.OWNER = 'NSTCSA581' AND IATT.TABLE_NAME = ATT.TABLE_NAME)) 
FROM DUAL
--查缺失的表
SELECT '1' TYPE, OWNER,TABLE_NAME,TABLESPACE_NAME, STATUS
  FROM ALL_TABLES ATT
 WHERE ATT.OWNER = 'NSTCSA601'
   AND NOT EXISTS (SELECT 1
          FROM ALL_TABLES IATT
         WHERE IATT.OWNER = 'NSTCSA581'
           AND IATT.TABLE_NAME = ATT.TABLE_NAME)
UNION ALL
--查多余的表
SELECT '2' TYPE, OWNER,TABLE_NAME,TABLESPACE_NAME, STATUS
  FROM ALL_TABLES ATT
 WHERE ATT.OWNER = 'NSTCSA581'
   AND NOT EXISTS (SELECT 1
          FROM ALL_TABLES IATT
         WHERE IATT.OWNER = 'NSTCSA601'
           AND IATT.TABLE_NAME = ATT.TABLE_NAME)

--用于存储对象缺失/多余信息的表
-- 1 | NSTCSA581 | NSTCSA601 | ABC_FIELD | {FIELD|TABLE|TRIG|SEQ|SEQ|FUN}
--用于存储字段比较详细信息
-- 表编码| 字段编码| srcSchema| targetSchema| 字段类型| 字段长度| 字段精度| 字段默认值| 
SELECT * FROM NSTCSA601.ASTDVCH
SELECT * FROM NSTC_DBCOMP_OBJECT WHERE OP_TYPE='1' AND OBJ_TYPE='FIELD'
SELECT * FROM NSTC_DBCOMP_TABLECOL_DETAIL ORDER BY TABLE_NAME, FIELD_NAME
SELECT * FROM ALL_TAB_COLS WHERE OWNER='NSTCSA601' AND TABLE_NAME = 'ASTDVCH' AND COLUMN_NAME='CREATEDATE'
SELECT OP_TYPE, TABLE_NAME, COUNT(*) FROM NSTC_DBCOMP_OBJECT GROUP BY OP_TYPE, TABLE_NAME

SELECT TABLE_NAME, OBJ_NAME FROM NSTC_DBCOMP_OBJECT WHERE OP_TYPE='2' AND OBJ_TYPE='FIELD'

--序列
--NSTCSA581缺失的SEQ
SELECT '1' TYPE,SEQUENCE_OWNER,SEQUENCE_NAME
  FROM ALL_SEQUENCES A
 WHERE SEQUENCE_OWNER = 'NSTCSA601'
   AND NOT EXISTS (SELECT 1
          FROM ALL_SEQUENCES B
         WHERE B.SEQUENCE_OWNER = 'NSTCSA581'
           AND B.SEQUENCE_NAME = A.SEQUENCE_NAME)
UNION ALL
--NSTCSA581多余的SEQ
SELECT '2' TYPE, SEQUENCE_OWNER,SEQUENCE_NAME
  FROM ALL_SEQUENCES A
 WHERE SEQUENCE_OWNER = 'NSTCSA581'
   AND NOT EXISTS (SELECT 1
          FROM ALL_SEQUENCES B
         WHERE B.SEQUENCE_OWNER = 'NSTCSA601'
           AND B.SEQUENCE_NAME = A.SEQUENCE_NAME)
--触发器比较存储过程
CREATE PROCEDURE NSTC_DBCOMPARE_TRIGG(SRCSCHEMA IN VARCHAR2, TARSCHEMA IN VARCHAR2) IS
INSERT_FLAG BOOLEAN :=FALSE;
COMM_FLAG BOOLEAN :=FALSE;
BEGIN
  NULL;
END NSTC_DBCOMPARE_TRIGG;

SELECT A.TABLE_NAME       ,
       A.TRIGGER_NAME     ,
       A.TRIGGER_TYPE     AS A_TRIGGER_TYPE,
       A.TRIGGERING_EVENT AS A_TRIGGERING_EVENT,
       A.BASE_OBJECT_TYPE AS A_BASE_OBJECT_TYPE,
       A.WHEN_CLAUSE      AS A_WHEN_CLAUSE,
       A.STATUS           AS A_STATUS,
       B.TRIGGER_TYPE     AS B_TRIGGER_TYPE,
       B.TRIGGERING_EVENT AS B_TRIGGERING_EVENT,
       B.BASE_OBJECT_TYPE AS B_BASE_OBJECT_TYPE,
       B.WHEN_CLAUSE      AS B_WHEN_CLAUSE,
       B.STATUS           AS B_STATUS
  FROM (SELECT TABLE_NAME,TRIGGER_NAME,TRIGGER_TYPE,TRIGGERING_EVENT,BASE_OBJECT_TYPE,WHEN_CLAUSE,STATUS FROM ALL_TRIGGERS A WHERE A.OWNER = 'NSTCSA581' AND EXISTS(SELECT 1 FROM ALL_TRIGGERS AA WHERE AA.OWNER = 'NSTCSA601' AND AA.TRIGGER_NAME = A.TRIGGER_NAME AND AA.TABLE_NAME = A.TABLE_NAME)) A,
       (SELECT TABLE_NAME,TRIGGER_NAME,TRIGGER_TYPE,TRIGGERING_EVENT,BASE_OBJECT_TYPE,WHEN_CLAUSE,STATUS FROM ALL_TRIGGERS B WHERE B.OWNER = 'NSTCSA601' AND EXISTS(SELECT 1 FROM ALL_TRIGGERS BB WHERE BB.OWNER = 'NSTCSA581' AND BB.TRIGGER_NAME = B.TRIGGER_NAME AND BB.TABLE_NAME = B.TABLE_NAME)) B
       WHERE A.TABLE_NAME = B.TABLE_NAME AND A.TRIGGER_NAME = B.TRIGGER_NAME;

--修改触发器相应属性用于测试
--NSTCSA581.WFUSER_TR
SELECT * FROM SYSTEM.NSTC_DBCOMP_TRIGG

SELECT * FROM ALL_TYPES 
--NSTCSA581缺失
SELECT '1' TYPE, TYPE_NAME, TYPE_OID, TYPECODE, ATTRIBUTES FROM ALL_TYPES A WHERE OWNER='NSTCSA601' AND NOT EXISTS(SELECT 1 FROM ALL_TYPES B WHERE OWNER='NSTCSA581' AND B.TYPE_NAME = A.TYPE_NAME)
UNION ALL
SELECT '2' TYPE, TYPE_NAME FROM ALL_TYPES A WHERE OWNER='NSTCSA581' AND NOT EXISTS(SELECT 1 FROM ALL_TYPES B WHERE OWNER='NSTCSA601' AND B.TYPE_NAME = A.TYPE_NAME)

SELECT COUNT(*), STATUS FROM ALL_OBJECTS GROUP BY STATUS
SELECT *
  FROM (SELECT A.NAME, A.LINE A_LINE, B.LINE B_LINE
          FROM (SELECT NAME, COUNT(LINE) LINE
                  FROM ALL_SOURCE
                 WHERE OWNER = 'NSTCSA601'
                   AND TYPE = 'PROCEDURE'
                 GROUP BY NAME) A
          FULL JOIN (SELECT NAME, COUNT(LINE) LINE
                      FROM ALL_SOURCE
                     WHERE OWNER = 'NSTCSA581'
                       AND TYPE = 'PROCEDURE'
                     GROUP BY NAME) B
            ON A.NAME = B.NAME) C
 WHERE C.B_LINE IS NOT NULL AND C.A_LINE <> C.B_LINE
--Oracle优化方案_表对象缺失/多余明细
SELECT
 (CASE WHEN A.A_TABLE_NAME IS NULL THEN B.B_TABLE_NAME ELSE A.A_TABLE_NAME END) AS TABLE_NAME,
 (CASE WHEN A.A_TABLE_NAME IS NULL THEN '1' WHEN B.B_TABLE_NAME IS NULL THEN '2' ELSE '-1' END) AS TYPE
FROM (
     SELECT OBJECT_NAME AS A_TABLE_NAME ,OBJECT_ID AS A_OBJECT_ID FROM ALL_OBJECTS WHERE OBJECT_TYPE = 'TABLE' AND OWNER='NSTCSA581'
) A FULL JOIN (
     SELECT OBJECT_NAME AS B_TABLE_NAME ,OBJECT_ID AS B_OBJECT_ID FROM ALL_OBJECTS WHERE OBJECT_TYPE = 'TABLE' AND OWNER='NSTCSA601'
) B ON A.A_TABLE_NAME = B.B_TABLE_NAME
WHERE A.A_TABLE_NAME IS NULL OR B.B_TABLE_NAME IS NULL

--Oracle优化方案_表对象字段结构明细
SELECT * FROM (
SELECT A.TABLE_NAME,A.COLUMN_NAME,
 (CASE WHEN A.DATA_TYPE <> B.DATA_TYPE THEN A.DATA_TYPE || '!=' || B.DATA_TYPE ELSE NULL END) DATA_TYPE,
 (CASE WHEN A.DATA_LENGTH <> B.DATA_LENGTH THEN A.DATA_LENGTH || '!=' || B.DATA_LENGTH ELSE NULL END) DATA_LENGTH,
 (CASE WHEN A.DATA_PRECISION <> B.DATA_PRECISION THEN A.DATA_PRECISION || '!=' || B.DATA_PRECISION ELSE NULL END) DATA_PRECISION,
 (CASE WHEN A.DATA_SCALE <> B.DATA_SCALE THEN A.DATA_SCALE || '!=' || B.DATA_SCALE ELSE NULL END) DATA_SCALE,
 (CASE WHEN A.NULLABLE <> B.NULLABLE THEN A.NULLABLE || '!=' || B.NULLABLE ELSE NULL END) NULLABLE,
 (CASE WHEN A.DEFAULT_LENGTH <> B.DEFAULT_LENGTH THEN A.DEFAULT_LENGTH || '!=' || B.DEFAULT_LENGTH ELSE NULL END) DEFAULT_LENGTH
 /*
 (CASE WHEN A.DATA_DEFAULT <> B.DATA_DEFAULT THEN A.DATA_DEFAULT || '!=' || B.DATA_DEFAULT ELSE NULL END) DATA_DEFAULT 
 */
FROM (
SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE,DATA_LENGTH,DATA_PRECISION,DATA_SCALE,NULLABLE,DEFAULT_LENGTH,DATA_DEFAULT 
       FROM ALL_TAB_COLS WHERE OWNER='NSTCSA581'
) A FULL JOIN (
SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE,DATA_LENGTH,DATA_PRECISION,DATA_SCALE,NULLABLE,DEFAULT_LENGTH,DATA_DEFAULT 
       FROM ALL_TAB_COLS WHERE OWNER='NSTCSA601'
) B ON A.TABLE_NAME = B.TABLE_NAME AND A.COLUMN_NAME = B.COLUMN_NAME
WHERE A.TABLE_NAME IS NOT NULL AND B.TABLE_NAME IS NOT NULL
) C WHERE C.DATA_TYPE IS NOT NULL OR C.DATA_LENGTH IS NOT NULL OR C.DATA_PRECISION IS NOT NULL OR C.DATA_SCALE IS NOT NULL OR C.NULLABLE IS NOT NULL OR C.DEFAULT_LENGTH IS NOT NULL

DROP TABLE WYC_LONG_TEST
CREATE TABLE WYC_LONG_TEST(TMP_VARCHAR VARCHAR2(2000), TMP_LONG CLOB)
INSERT INTO WYC_LONG_TEST SELECT TO_LOB(DATA_DEFAULT), TO_LOB(DATA_DEFAULT) FROM ALL_TAB_COLS WHERE OWNER='NSTCSA601' AND DEFAULT_LENGTH <> 0

SELECT * FROM WYC_LONG_TEST
UPDATE WYC_LONG_TEST SET TMP_VARCHAR=TO_CHAR(TMP_LONG)

SELECT * FROM (
SELECT '2' OP_TYPE, A.*
  FROM (SELECT TABLE_NAME, COLUMN_NAME
          FROM ALL_TAB_COLS ATC1
         WHERE OWNER = 'NSTCSA581'
           AND NOT EXISTS
         (SELECT OWNER, TABLE_NAME, COLUMN_NAME
                  FROM ALL_TAB_COLS ATC2
                 WHERE OWNER = 'NSTCSA601'
                   AND ATC2.TABLE_NAME = ATC1.TABLE_NAME AND ATC2.COLUMN_NAME = ATC1.COLUMN_NAME)
         ) A
UNION ALL
SELECT '1' OP_TYPE, A.*
  FROM (SELECT TABLE_NAME, COLUMN_NAME
          FROM ALL_TAB_COLS ATC1
         WHERE OWNER = 'NSTCSA601'
           AND NOT EXISTS
         (SELECT OWNER, TABLE_NAME, COLUMN_NAME
                  FROM ALL_TAB_COLS ATC2
                 WHERE OWNER = 'NSTCSA581'
                   AND ATC2.TABLE_NAME = ATC1.TABLE_NAME AND ATC2.COLUMN_NAME = ATC1.COLUMN_NAME)
         ) A
)C WHERE NOT EXISTS(SELECT 1 FROM ALL_TABLES CC WHERE CC.TABLE_NAME = C.TABLE_NAME)

--查A用户下的表的表字段缺失情况
---查A用户下与B用户下共有的表
---查A用户下的字段不存在且在B用户下存在
---查A用户下的字段存在且在B用户下不存在
----查A用户下与B用户下共有的表
SELECT * FROM (
SELECT (CASE WHEN A_TAB IS NULL THEN '1' WHEN B_TAB IS NULL THEN '2' ELSE '-1' END) TYPE,
       (CASE WHEN A_TAB IS NULL THEN B_TAB ELSE A_TAB END) TABLE_NAME,
       (CASE WHEN A_COL IS NULL THEN B_COL ELSE A_COL END) TABLE_COLUMN
  FROM (SELECT TABLE_NAME A_TAB, COLUMN_NAME A_COL FROM ALL_TAB_COLS A WHERE A.OWNER = 'NSTCSA581' AND EXISTS(SELECT 1 FROM ALL_TABLES D WHERE D.OWNER='NSTCSA601' AND D.TABLE_NAME = A.TABLE_NAME)) A
  FULL JOIN (SELECT TABLE_NAME B_TAB, COLUMN_NAME B_COL FROM ALL_TAB_COLS B WHERE B.OWNER = 'NSTCSA601' AND EXISTS(SELECT 1 FROM ALL_TABLES D WHERE D.OWNER='NSTCSA581' AND D.TABLE_NAME = B.TABLE_NAME)) B
    ON A.A_TAB = B.B_TAB AND A.A_COL = B.B_COL
) C WHERE C.TYPE <> '-1'

SELECT * FROM (
SELECT A.TABLE_NAME,A.COLUMN_NAME,B.B_TAB,B.B_COL
  FROM ALL_TAB_COLS A
  FULL JOIN (SELECT TABLE_NAME B_TAB, COLUMN_NAME B_COL
               FROM ALL_TAB_COLS B
              WHERE B.OWNER = 'NSTCSA601') B
    ON A.TABLE_NAME = B.B_TAB
   AND A.COLUMN_NAME = B.B_COL
 WHERE A.OWNER = 'NSTCSA581'
) A WHERE A.TABLE_NAME IS NULL OR A.B_TAB IS NULL

SELECT * FROM ALL_TAB_COLS WHERE TABLE_NAME = 'VW_CNTBUSSSHEET'
SELECT * FROM NSTCSA601.WFUSER
SELECT * FROM NSTCSA581.WFUSER
SELECT * FROM ALL_TAB_COLS WHERE OWNER='NSTCSA581' AND TABLE_NAME = 'WFUSER' AND COLUMN_NAME = 'STATE'
SELECT * FROM ALL_TABLES WHERE owner='NSTCSA601' AND TABLE_NAME = 'WFUSER'

--视图字段问题
SELECT A.TABLE_NAME,
       A.COLUMN_NAME,
       A.DATA_TYPE      A_DT,
       B.DATA_TYPE      B_DT,
       A.DATA_LENGTH    A_DLEN,
       B.DATA_LENGTH    B_DLEN,
       A.DATA_PRECISION A_DPREC,
       B.DATA_PRECISION B_DPREC,
       A.DATA_SCALE     A_DSCA,
       B.DATA_SCALE     B_DSCA,
       A.NULLABLE       A_NULLA,
       B.NULLABLE       B_NULLA,
       A.DEFAULT_LENGTH A_DEFLEN,
       B.DEFAULT_LENGTH B_DEFLEN,
       A.DATA_DEFAULT   A_DATADF,
       B.DATA_DEFAULT   B_DATADF
  FROM (SELECT ATT.TABLE_NAME,
               ACT1.COLUMN_NAME,
               ACT1.DATA_TYPE,
               ACT1.DATA_LENGTH,
               ACT1.DATA_PRECISION,
               ACT1.DATA_SCALE,
               ACT1.NULLABLE,
               ACT1.DEFAULT_LENGTH,
               ACT1.DATA_DEFAULT
          FROM ALL_TAB_COLS ACT1 LEFT JOIN ALL_TABLES ATT ON ACT1.TABLE_NAME = ATT.TABLE_NAME
         WHERE ACT1.OWNER = 'NSTCSA581' AND ATT.OWNER = 'NSTCSA581'
           AND EXISTS (SELECT 1
                  FROM ALL_TAB_COLS ATC2
                 WHERE ATC2.OWNER = 'NSTCSA601'
                   AND ATC2.TABLE_NAME = ACT1.TABLE_NAME AND ATC2.COLUMN_NAME = ACT1.COLUMN_NAME)) A,
       (SELECT ATT.TABLE_NAME,
               COLUMN_NAME,
               DATA_TYPE,
               DATA_LENGTH,
               DATA_PRECISION,
               DATA_SCALE,
               NULLABLE,
               DEFAULT_LENGTH,
               DATA_DEFAULT
          FROM ALL_TAB_COLS ACT1 LEFT JOIN ALL_TABLES ATT ON ACT1.TABLE_NAME = ATT.TABLE_NAME
         WHERE ACT1.OWNER = 'NSTCSA601' AND ATT.OWNER='NSTCSA601'
           AND EXISTS (SELECT 1
                  FROM ALL_TAB_COLS ATC2
                 WHERE ATC2.OWNER = 'NSTCSA581'
                   AND ATC2.TABLE_NAME = ACT1.TABLE_NAME AND ATC2.COLUMN_NAME = ACT1.COLUMN_NAME)) B
 WHERE A.TABLE_NAME = B.TABLE_NAME
   AND A.COLUMN_NAME = B.COLUMN_NAME
--VW_COM_GETTODAY
SELECT * FROM ALL_TABLES WHERE OWNER='NSTCSA601' AND TABLE_NAME = 'VW_COM_GETTODAY'
SELECT * FROM SYSTEM.NSTC_DBCOMP_TABLECOL_DETAIL
SELECT A.OBJECT_TYPE,COUNT(*) FROM (
SELECT UPPER(OBJECT_NAME) OBJECT_NAME,OBJECT_TYPE,STATUS FROM ALL_OBJECTS WHERE OWNER='NSTCSA581' AND STATUS <> 'VALID' ORDER BY OBJECT_TYPE, OBJECT_NAME
) A GROUP BY A.OBJECT_TYPE
